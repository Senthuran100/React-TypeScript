{"version":3,"sources":["store/actionTypes.ts","store/actionCreators.ts","components/AddTodo.tsx","components/Todo.tsx","App.tsx","store/reducer.ts","index.tsx"],"names":["ADD_TODO","REMOVE_TODO","removeTodo","todo","invokeHttpRequest","type","actionTypes","action","dispatch","AddTodo","saveTodo","React","setTodo","handleTodoData","e","currentTarget","id","value","onSubmit","preventDefault","className","placeholder","onChange","disabled","undefined","Todo","useDispatch","deleteTodo","article","title","body","onClick","App","todos","useSelector","state","shallowEqual","addTodo","map","initialState","reducer","newTodo","Math","random","concat","updatedTodos","filter","store","createStore","applyMiddleware","thunk","rootElement","document","getElementById","render"],"mappings":"2NAAaA,G,MAAU,YACVC,EAAc,cCSpB,SAASC,EAAWC,GAKzB,OAAOC,EAJsB,CACvBC,KAAOC,EACPH,SAMD,SAASC,EAAkBG,GAC9B,OAAO,SAACC,GAEJA,EAASD,I,0BChBJE,EAAyB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAC3BC,aAD2B,mBAC3CR,EAD2C,KACtCS,EADsC,KAG5CC,EAAiB,SAACC,GACpBF,EAAQ,2BACHT,GADE,kBAEJW,EAAEC,cAAcC,GAAKF,EAAEC,cAAcE,UAS5C,OACI,uBAAMC,SANS,SAACJ,GAChBA,EAAEK,iBACFT,EAASP,IAImBiB,UAAU,WAAtC,UACE,uBACEf,KAAK,OACLW,GAAG,QACHK,YAAY,QACZC,SAAUT,IAEZ,uBACER,KAAK,OACLW,GAAG,OACHK,YAAY,cACZC,SAAUT,IAEZ,wBAAQU,cAAmBC,IAATrB,EAAlB,0BC1BGsB,EAAwB,SAAC,GAAuB,IAAtBtB,EAAqB,EAArBA,KAAMD,EAAe,EAAfA,WACnCM,EAA0BkB,cAE1BC,EAAahB,eACf,SAACiB,GAAD,OAAmBpB,EAASN,EAAWC,MACvC,CAACK,EAAUN,IAGf,OACI,sBAAKkB,UAAU,OAAf,UACE,gCACE,6BAAKjB,EAAK0B,QACV,4BAAI1B,EAAK2B,UAEX,wBAAQC,QAAS,kBAAMJ,EAAWxB,IAAlC,6BCaK6B,EA3BO,WACpB,IAAMC,EAAwBC,aAC5B,SAACC,GAAD,OAAqBA,EAAMF,QAAMG,KAG7B5B,EAA0BkB,cAE1BhB,EAAWC,eACf,SAACR,GAAD,OAAgBK,EHfb,SAAiBL,GAKtB,OAAOC,EAJoB,CACvBC,KAAOC,EACPH,SGYuBkC,CAAQlC,MACjC,CAACK,IAGH,OACE,iCACE,oBAAIY,UAAU,SAAd,sBACA,cAAC,EAAD,CAASV,SAAUA,IAClBuB,EAAMK,KAAI,SAACnC,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACND,WAAYA,GAFPC,EAAKa,WCzBduB,EAAuB,CACzBN,MAAM,CACF,CACEjB,GAAI,EACJa,MAAO,SACPC,KACE,eAEJ,CACEd,GAAI,EACJa,MAAO,SACPC,KACE,iBA6BGU,EAxBC,WAAgE,IAA/DL,EAA8D,uDAA5CI,EAAahC,EAA+B,uCAC3E,OAAQA,EAAOF,MACX,KAAKC,EACH,IAAMmC,EAAgB,CACpBzB,GAAI0B,KAAKC,SACTd,MAAOtB,EAAOJ,KAAK0B,MACnBC,KAAMvB,EAAOJ,KAAK2B,MAEpB,OAAO,2BACFK,GADL,IAEEF,MAAOE,EAAMF,MAAMW,OAAOH,KAE9B,KAAKnC,EACH,IAAMuC,EAAuBV,EAAMF,MAAMa,QACvC,SAAA3C,GAAI,OAAIA,EAAKa,KAAOT,EAAOJ,KAAKa,MAElC,OAAO,2BACFmB,GADL,IAEEF,MAAOY,IAGb,OAAOV,G,QC/BPY,EAEFC,YAAYR,EAAQS,YAAgBC,MAElCC,EAAcC,SAASC,eAAe,QAE5CC,iBACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,K","file":"static/js/main.fbf4074c.chunk.js","sourcesContent":["export const ADD_TODO =\"ADD_TODO\"\nexport const REMOVE_TODO = \"REMOVE_TODO\"","import * as actionTypes from \"./actionTypes\"\n\nexport function addTodo(todo:Todo) {\n  const action: todoAction = {\n      type : actionTypes.ADD_TODO,\n      todo\n  }\n  return invokeHttpRequest(action)\n}\n\nexport function removeTodo(todo:Todo){\n    const action: todoAction = {\n        type : actionTypes.REMOVE_TODO,\n        todo\n    } \n  return invokeHttpRequest(action)\n\n}\n\nexport function invokeHttpRequest(action: todoAction) {\n    return (dispatch: DispatchType) => {\n     \n        dispatch(action)\n       \n    }\n  }","import * as React from \"react\"\n\ntype Props = {\n    saveTodo: (todo:Todo|any) =>void\n}\n\nexport const AddTodo:React.FC<Props>= ({saveTodo}) => {\n    const [todo,setTodo] = React.useState<Todo | {}>()\n\n    const handleTodoData = (e: React.FormEvent<HTMLInputElement>) => {\n        setTodo({\n          ...todo,\n          [e.currentTarget.id]: e.currentTarget.value,\n        })\n    }\n\n    const addNewTodo = (e: React.FormEvent) => {\n        e.preventDefault()\n        saveTodo(todo)\n    }\n\n    return (\n        <form onSubmit={addNewTodo} className=\"Add-todo\">\n          <input\n            type=\"text\"\n            id=\"title\"\n            placeholder=\"Title\"\n            onChange={handleTodoData}\n          />\n          <input\n            type=\"text\"\n            id=\"body\"\n            placeholder=\"Description\"\n            onChange={handleTodoData}\n          />\n          <button disabled={todo === undefined ? true : false}>\n            Add Todo\n          </button>\n        </form>\n      )\n\n    \n}","import * as React from \"react\"\nimport { Dispatch } from \"redux\"\nimport { useDispatch } from \"react-redux\"\n\ntype Props = {\n    todo:Todo\n    removeTodo:(todo:Todo) => void\n}\n\nexport const Todo: React.FC<Props> = ({todo, removeTodo}) =>{\n    const dispatch: Dispatch<any> = useDispatch()\n\n    const deleteTodo = React.useCallback(\n        (article: Todo) => dispatch(removeTodo(todo)),\n        [dispatch, removeTodo]\n    )\n    \n    return (\n        <div className=\"Todo\">\n          <div>\n            <h1>{todo.title}</h1>\n            <p>{todo.body}</p>\n          </div>\n          <button onClick={() => deleteTodo(todo)}>Delete Todo</button>\n        </div>\n      )\n}","import * as React from \"react\"\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\"\nimport './App.css';\nimport { Dispatch } from \"redux\"\nimport { addTodo, removeTodo } from \"./store/actionCreators\"\nimport { AddTodo } from \"./components/AddTodo\"\nimport { Todo } from \"./components/Todo\";\n\n\nconst App: React.FC = () =>{\n  const todos:readonly Todo[] = useSelector(\n    (state:todoState) => state.todos,shallowEqual\n  )\n\n  const dispatch: Dispatch<any> = useDispatch()\n\n  const saveTodo = React.useCallback(\n    (todo: Todo) => dispatch(addTodo(todo)),\n    [dispatch]\n  )\n\n  return (\n    <main>\n      <h1 className=\"header\">My Todos</h1>\n      <AddTodo saveTodo={saveTodo} />\n      {todos.map((todo: Todo) => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          removeTodo={removeTodo}\n        />\n      ))}\n      </main>\n  )\n}\n\nexport default App;\n","import * as actionTypes from \"./actionTypes\"\n\nconst initialState:todoState={\n    todos:[\n        {\n          id: 1,\n          title: \"Todo 1\",\n          body:\n            \"Todo List 1\",\n        },\n        {\n          id: 2,\n          title: \"Todo 2\",\n          body:\n            \"Todo List 2\",\n        },\n      ],\n}\n\nconst reducer = (state:todoState = initialState,action:todoAction):todoState =>{\n    switch (action.type) {\n        case actionTypes.ADD_TODO:\n          const newTodo: Todo = {\n            id: Math.random(), \n            title: action.todo.title,\n            body: action.todo.body,\n          }\n          return {\n            ...state,\n            todos: state.todos.concat(newTodo),\n          }\n        case actionTypes.REMOVE_TODO:\n          const updatedTodos: Todo[] = state.todos.filter(\n            todo => todo.id !== action.todo.id\n          )\n          return {\n            ...state,\n            todos: updatedTodos,\n          }\n      }\n      return state\n    }\n    \nexport default reducer\n","import * as React from \"react\"\nimport { render } from \"react-dom\"\nimport './index.css';\nimport { createStore, applyMiddleware, Store } from \"redux\"\nimport App from './App';\nimport reducer from \"./store/reducer\"\nimport thunk from \"redux-thunk\"\nimport { Provider } from \"react-redux\"\n\nconst store:Store<todoState,todoAction> & {\n   dispatch:DispatchType\n} = createStore(reducer,applyMiddleware(thunk))\n\nconst rootElement = document.getElementById(\"root\")\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n)"],"sourceRoot":""}